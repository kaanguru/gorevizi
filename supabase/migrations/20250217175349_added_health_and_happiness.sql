create table "public"."health_and_happiness" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "health" smallint default '100'::smallint,
    "happiness" smallint default '100'::smallint,
    "user_id" uuid not null default auth.uid()
);


alter table "public"."health_and_happiness" enable row level security;

CREATE UNIQUE INDEX health_and_happiness_pkey ON public.health_and_happiness USING btree (id);

alter table "public"."health_and_happiness" add constraint "health_and_happiness_pkey" PRIMARY KEY using index "health_and_happiness_pkey";

alter table "public"."health_and_happiness" add constraint "health_and_happiness_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."health_and_happiness" validate constraint "health_and_happiness_user_id_fkey";

grant delete on table "public"."health_and_happiness" to "anon";

grant insert on table "public"."health_and_happiness" to "anon";

grant references on table "public"."health_and_happiness" to "anon";

grant select on table "public"."health_and_happiness" to "anon";

grant trigger on table "public"."health_and_happiness" to "anon";

grant truncate on table "public"."health_and_happiness" to "anon";

grant update on table "public"."health_and_happiness" to "anon";

grant delete on table "public"."health_and_happiness" to "authenticated";

grant insert on table "public"."health_and_happiness" to "authenticated";

grant references on table "public"."health_and_happiness" to "authenticated";

grant select on table "public"."health_and_happiness" to "authenticated";

grant trigger on table "public"."health_and_happiness" to "authenticated";

grant truncate on table "public"."health_and_happiness" to "authenticated";

grant update on table "public"."health_and_happiness" to "authenticated";

grant delete on table "public"."health_and_happiness" to "service_role";

grant insert on table "public"."health_and_happiness" to "service_role";

grant references on table "public"."health_and_happiness" to "service_role";

grant select on table "public"."health_and_happiness" to "service_role";

grant trigger on table "public"."health_and_happiness" to "service_role";

grant truncate on table "public"."health_and_happiness" to "service_role";

grant update on table "public"."health_and_happiness" to "service_role";

create policy "Enable all for users based on user_id"
on "public"."health_and_happiness"
as permissive
for all
to public
using ((( SELECT auth.uid() AS uid) = user_id));



